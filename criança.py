import streamlit as st
import collections

# --- ConfiguraÃ§Ã£o da pÃ¡gina ---
st.set_page_config(
    page_title="Analisador de PadrÃµes de Apostas",
    page_icon="ğŸ”®",
    layout="wide"
)

# --- FunÃ§Ãµes de AnÃ¡lise de PadrÃµes ---
def analisar_padrao(historico):
    """
    Analisa o histÃ³rico e retorna o padrÃ£o detectado e a sugestÃ£o de aposta.
    """
    if len(historico) < 2:
        return "Nenhum PadrÃ£o Detectado", "Insira mais resultados para iniciar a anÃ¡lise."

    # Invertemos o histÃ³rico para analisar do mais recente para o mais antigo
    hist_recente = historico[::-1]

    # --- PadrÃ£o de AlternÃ¢ncia Simples (Ping-Pong) ---
    if len(hist_recente) >= 4 and hist_recente[0] != hist_recente[1] and hist_recente[1] != hist_recente[2] and hist_recente[2] != hist_recente[3]:
        count_ping_pong = 0
        for i in range(len(hist_recente) - 1):
            if hist_recente[i] != hist_recente[i+1]:
                count_ping_pong += 1
            else:
                break
        if count_ping_pong >= 4:
            sugestao = f"PadrÃ£o de Ping-Pong detectado com {count_ping_pong+1} alternÃ¢ncias. A IA pode quebrar este padrÃ£o agora. SugestÃ£o: Aposte contra a alternÃ¢ncia (ex: se o Ãºltimo foi {hist_recente[0]}, aposte em {hist_recente[0]} novamente)."
            return "PadrÃ£o 1. AlternÃ¢ncia Simples (Ping-Pong)", sugestao
    
    # --- PadrÃ£o de SequÃªncia Estendida ---
    if len(hist_recente) >= 3 and hist_recente[0] == hist_recente[1] == hist_recente[2]:
        repeticao = hist_recente[0]
        count_seq = 0
        for resultado in hist_recente:
            if resultado == repeticao:
                count_seq += 1
            else:
                break
        sugestao = f"SequÃªncia estendida de {count_seq} resultados de {mapear_cores[repeticao]}. A IA forÃ§a vocÃª a acreditar que 'vai virar'. SugestÃ£o: Mantenha a aposta na continuaÃ§Ã£o atÃ© a quebra, ou aguarde a quebra e inverta."
        return "PadrÃ£o 2. SequÃªncia Estendida", sugestao
    
    # --- PadrÃ£o de Ã‚ncora com Empate ---
    if len(hist_recente) >= 3 and 'E' in hist_recente[:3] and hist_recente[0] != 'E' and hist_recente[2] != 'E' and hist_recente[1] == 'E':
        sugestao = f"Empate (ğŸŸ¡) inserido no meio da sequÃªncia. A IA usa o empate para resetar a leitura e quebrar ciclos mentais. SugestÃ£o: Reavalie o padrÃ£o. A tendÃªncia pode mudar agora."
        return "PadrÃ£o 3. Ã‚ncora com Empate", sugestao
    
    # --- PadrÃ£o Camuflado de Ciclo 3-1 ---
    if len(hist_recente) >= 4:
        if (hist_recente[0:3] == [hist_recente[0], hist_recente[0], hist_recente[0]] and hist_recente[3] != hist_recente[0]):
            sugestao = f"Ciclo 3-1 detectado ({mapear_cores[hist_recente[0]]}, {mapear_cores[hist_recente[0]]}, {mapear_cores[hist_recente[0]]}, {mapear_cores[hist_recente[3]]}). A IA tende a inverter o ciclo quando as apostas aumentam. SugestÃ£o: Esteja preparado para a inversÃ£o."
            return "PadrÃ£o 4. Ciclo 3-1", sugestao
    
    # --- PadrÃ£o de Armadilha PÃ³s-Ganho ---
    if len(hist_recente) >= 3 and hist_recente[0] == hist_recente[1] and hist_recente[2] != hist_recente[0]:
        sugestao = f"Armadilha PÃ³s-Ganho detectada (ex: {mapear_cores[hist_recente[2]]} -> {mapear_cores[hist_recente[0]]}, {mapear_cores[hist_recente[0]]}). A IA forÃ§a dois resultados opostos apÃ³s uma vitÃ³ria para derrubar quem dobra a aposta. SugestÃ£o: NÃ£o dobre sua aposta apÃ³s uma vitÃ³ria neste momento."
        return "PadrÃ£o 6. Armadilha PÃ³s-Ganho", sugestao
    
    # --- PadrÃ£o Espelho ---
    if len(hist_recente) >= 6 and hist_recente[0:3] == hist_recente[3:6][::-1]:
        sugestao = f"PadrÃ£o Espelho detectado (ex: {hist_recente[0]}{hist_recente[1]}{hist_recente[2]} -> {hist_recente[3]}{hist_recente[4]}{hist_recente[5]}). A IA inverte a sequÃªncia para confundir sua leitura. SugestÃ£o: NÃ£o confie na repetiÃ§Ã£o exata do padrÃ£o."
        return "PadrÃ£o 7. Espelho", sugestao

    # --- PadrÃ£o de RuÃ­do Controlado (se nenhum outro for detectado) ---
    sugestao = "A sequÃªncia parece aleatÃ³ria, mas a IA pode estar gerando pseudo-aleatoriedade com Ã¢ncoras ocultas. SugestÃ£o: Cautela, nÃ£o hÃ¡ padrÃ£o claro. Evite apostas pesadas."
    return "PadrÃ£o 5. RuÃ­do Controlado", sugestao

# --- VariÃ¡veis de Mapeamento ---
mapear_cores = {'A': 'Azul', 'E': 'Amarelo', 'V': 'Vermelho'}
mapear_emojis = {'A': 'ğŸ”µ', 'E': 'ğŸŸ¡', 'V': 'ğŸ”´'}

# --- InicializaÃ§Ã£o do estado da sessÃ£o ---
if 'historico' not in st.session_state:
    st.session_state.historico = collections.deque(maxlen=20) # Limita a 20 resultados

# --- Layout do aplicativo ---
st.title("ğŸ”® Analisador de PadrÃµes de Apostas")
st.markdown("---")

st.markdown("### 1. Inserir Resultados")
st.write("Clique nos botÃµes correspondentes ao resultado do jogo.")

col1, col2, col3, col4, col5 = st.columns(5)
with col1:
    if st.button("ğŸ”µ VitÃ³ria da Casa", use_container_width=True):
        st.session_state.historico.append('A')
with col2:
    if st.button("ğŸŸ¡ Empate", use_container_width=True):
        st.session_state.historico.append('E')
with col3:
    if st.button("ğŸ”´ VitÃ³ria de Fora", use_container_width=True):
        st.session_state.historico.append('V')
with col4:
    st.markdown("<br>", unsafe_allow_html=True)
    if st.button("Desfazer", help="Remove o Ãºltimo resultado inserido", use_container_width=True):
        if st.session_state.historico:
            st.session_state.historico.pop()
with col5:
    st.markdown("<br>", unsafe_allow_html=True)
    if st.button("Limpar HistÃ³rico", help="Apaga todos os resultados", type="primary", use_container_width=True):
        st.session_state.historico.clear()

st.markdown("---")

st.markdown("### 2. HistÃ³rico de Resultados")
# Exibe o histÃ³rico de forma horizontal
historico_str = " ".join([mapear_emojis[r] for r in st.session_state.historico])
st.markdown(f"**Mais Recente â†’ Mais Antigo:** {historico_str}")

st.markdown("---")

st.markdown("### 3. AnÃ¡lise e SugestÃ£o")
if st.session_state.historico:
    padrao, sugestao = analisar_padrao(list(st.session_state.historico))
    st.markdown(f"**PadrÃ£o Detectado:** `{padrao}`")
    st.info(f"**SugestÃ£o:** {sugestao}")
else:
    st.info("O histÃ³rico estÃ¡ vazio. Insira resultados para comeÃ§ar a anÃ¡lise.")

# Agradecimento
st.markdown("<br><br><br>", unsafe_allow_html=True)
st.markdown("---")
st.write("Desenvolvido para anÃ¡lise de padrÃµes de cassino com Streamlit. **Lembre-se:** jogue com responsabilidade.")
